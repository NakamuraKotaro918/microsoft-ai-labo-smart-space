name: Destroy Azure Resources

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'ÂâäÈô§„Åô„ÇãÁí∞Â¢É'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      resource_group:
        description: '„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„ÉóÂêçÔºà„Ç´„Çπ„Çø„É†ÊåáÂÆöÊôÇÔºâ'
        required: false
        type: string
      confirm_destroy:
        description: 'ÂâäÈô§„ÅÆÁ¢∫Ë™çÔºàyes „Å®ÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºâ'
        required: true
        type: string
        default: 'no'

env:
  PROJECT_NAME: mass-smart-space
  LOCATION: japaneast

jobs:
  destroy:
    name: Destroy Azure Resources
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az version

      - name: Login to Azure
        run: |
          az login --service-principal \
            --username "${{ secrets.AZURE_CLIENT_ID }}" \
            --password "${{ secrets.AZURE_CLIENT_SECRET }}" \
            --tenant "${{ secrets.AZURE_TENANT_ID }}"

      - name: Set resource group
        id: set-rg
        run: |
          if [ -n "${{ github.event.inputs.resource_group }}" ]; then
            echo "RESOURCE_GROUP=${{ github.event.inputs.resource_group }}" >> $GITHUB_ENV
          else
            # ÂÆüÈöõ„Å´Â≠òÂú®„Åô„Çã„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„ÉóÂêç„Çí‰ΩøÁî®
            if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
              echo "RESOURCE_GROUP=MS-Lab-Proj-RG" >> $GITHUB_ENV
            elif [ "${{ github.event.inputs.environment }}" = "test" ]; then
              echo "RESOURCE_GROUP=MSLab-test" >> $GITHUB_ENV
            else
              echo "RESOURCE_GROUP=MS-Lab-Proj-RG" >> $GITHUB_ENV
            fi
          fi
          echo "Using Resource Group: ${{ env.RESOURCE_GROUP }}"

      - name: Verify resource group exists
        run: |
          if ! az group show --name ${{ env.RESOURCE_GROUP }} >/dev/null 2>&1; then
            echo "‚ùå Resource group '${{ env.RESOURCE_GROUP }}' does not exist"
            exit 1
          fi
          echo "‚úÖ Resource group '${{ env.RESOURCE_GROUP }}' found"

      - name: List resources before deletion
        run: |
          echo "=== Resources to be deleted ==="
          echo "Resource Group: ${{ env.RESOURCE_GROUP }}"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo ""
          az resource list --resource-group ${{ env.RESOURCE_GROUP }} --query "[].{name:name, type:type, location:location, provisioningState:provisioningState}" -o table

      - name: Show resource count and cost warning
        run: |
          RESOURCE_COUNT=$(az resource list --resource-group ${{ env.RESOURCE_GROUP }} --query 'length(@)' -o tsv)
          echo "‚ö†Ô∏è  WARNING: This will delete ALL resources in resource group: ${{ env.RESOURCE_GROUP }}"
          echo "üìä Resource count: $RESOURCE_COUNT"
          echo "üí∞ This action will stop all billing for these resources"
          echo "‚ùå Deletion cannot be undone!"
          echo ""
          echo "Confirmation: ${{ github.event.inputs.confirm_destroy }}"
          if [ "${{ github.event.inputs.confirm_destroy }}" != "yes" ]; then
            echo "‚ùå Confirmation failed. Please type 'yes' to proceed."
            exit 1
          fi
          echo "‚úÖ Confirmation successful. Proceeding with deletion..."

      - name: Delete resource group
        run: |
          echo "üóëÔ∏è  Starting resource group deletion..."
          az group delete \
            --name ${{ env.RESOURCE_GROUP }} \
            --yes \
            --no-wait
          echo "Deletion initiated. Waiting for completion..."

      - name: Wait for deletion
        run: |
          echo "‚è≥ Waiting for resource group deletion to complete..."
          while az group show --name ${{ env.RESOURCE_GROUP }} 2>/dev/null; do
            echo "Still deleting... waiting 30 seconds"
            sleep 30
          done
          echo "‚úÖ Resource group deletion completed"

      - name: Verify deletion
        run: |
          if az group show --name ${{ env.RESOURCE_GROUP }} 2>/dev/null; then
            echo "‚ùå Resource group still exists"
            exit 1
          else
            echo "‚úÖ Resource group successfully deleted"
          fi

      - name: Deletion summary
        run: |
          echo "=== Destruction Summary ==="
          echo "Resource Group: ${{ env.RESOURCE_GROUP }}"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Status: Successfully deleted"
          echo "Timestamp: $(date -u)"
          echo "GitHub Run ID: ${{ github.run_id }}"
          echo ""
          echo "üéâ All resources have been removed from Azure"
          echo "üí° Remember to clean up any local references or documentation"
