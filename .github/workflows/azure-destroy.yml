name: Destroy Azure Resources

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'ÂâäÈô§„Åô„ÇãÁí∞Â¢É'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod
      resource_group:
        description: '„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„ÉóÂêçÔºà„Ç´„Çπ„Çø„É†ÊåáÂÆöÊôÇÔºâ'
        required: false
        type: string
      confirm_destroy:
        description: 'ÂâäÈô§„ÅÆÁ¢∫Ë™çÔºàyes „Å®ÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºâ'
        required: true
        type: string
        default: 'no'

env:
  PROJECT_NAME: mass-smart-space
  LOCATION: japaneast

jobs:
  destroy:
    name: Destroy Azure Resources
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          az version

      - name: Login to Azure
        run: |
          az login --service-principal \
            --username "${{ secrets.AZURE_CLIENT_ID }}" \
            --password "${{ secrets.AZURE_CLIENT_SECRET }}" \
            --tenant "${{ secrets.AZURE_TENANT_ID }}"

      - name: Set resource group
        id: set-rg
        run: |
          if [ -n "${{ github.event.inputs.resource_group }}" ]; then
            echo "RESOURCE_GROUP=${{ github.event.inputs.resource_group }}" >> $GITHUB_ENV
          else
            # ÂÆüÈöõ„Å´Â≠òÂú®„Åô„Çã„É™„ÇΩ„Éº„Çπ„Ç∞„É´„Éº„ÉóÂêç„Çí‰ΩøÁî®
            if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
              echo "RESOURCE_GROUP=MS-Lab-Proj-RG" >> $GITHUB_ENV
            elif [ "${{ github.event.inputs.environment }}" = "test" ]; then
              echo "RESOURCE_GROUP=MSLab-test" >> $GITHUB_ENV
            else
              echo "RESOURCE_GROUP=MS-Lab-Proj-RG" >> $GITHUB_ENV
            fi
          fi
          echo "Using Resource Group: ${{ env.RESOURCE_GROUP }}"

      - name: Verify resource group exists
        run: |
          if ! az group show --name ${{ env.RESOURCE_GROUP }} >/dev/null 2>&1; then
            echo "‚ùå Resource group '${{ env.RESOURCE_GROUP }}' does not exist"
            exit 1
          fi
          echo "‚úÖ Resource group '${{ env.RESOURCE_GROUP }}' found"

      - name: List resources before deletion
        run: |
          echo "=== Resources to be deleted ==="
          echo "Resource Group: ${{ env.RESOURCE_GROUP }}"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo ""
          az resource list --resource-group ${{ env.RESOURCE_GROUP }} --query "[].{name:name, type:type, location:location, provisioningState:provisioningState}" -o table

      - name: Show resource count and cost warning
        run: |
          RESOURCE_COUNT=$(az resource list --resource-group ${{ env.RESOURCE_GROUP }} --query 'length(@)' -o tsv)
          echo "‚ö†Ô∏è  WARNING: This will delete ONLY the resources deployed by azure-deploy in resource group: ${{ env.RESOURCE_GROUP }}"
          echo "üìä Total resource count in resource group: $RESOURCE_COUNT"
          echo "üí∞ This action will stop billing for the deployed resources only"
          echo "‚úÖ Resource group and other resources will remain intact"
          echo "‚ùå Deletion of deployed resources cannot be undone!"
          echo ""
          echo "Confirmation: ${{ github.event.inputs.confirm_destroy }}"
          if [ "${{ github.event.inputs.confirm_destroy }}" != "yes" ]; then
            echo "‚ùå Confirmation failed. Please type 'yes' to proceed."
            exit 1
          fi
          echo "‚úÖ Confirmation successful. Proceeding with specific resource deletion..."

      - name: Delete specific resources only
        run: |
          echo "üóëÔ∏è  Deleting only specific resources deployed by azure-deploy..."
          
          # App Service„ÇíÂâäÈô§
          echo "Deleting App Service..."
          az webapp delete --name "api-${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}" --resource-group ${{ env.RESOURCE_GROUP }} || echo "App Service not found or already deleted"
          
          # App Service Plan„ÇíÂâäÈô§
          echo "Deleting App Service Plan..."
          az appservice plan delete --name "asp-${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}" --resource-group ${{ env.RESOURCE_GROUP }} --yes || echo "App Service Plan not found or already deleted"
          
          # Cosmos DB„ÇíÂâäÈô§
          echo "Deleting Cosmos DB..."
          COSMOS_NAME="cosmos-${PROJECT_NAME//-/}${ENVIRONMENT}"
          az cosmosdb delete --name "$COSMOS_NAME" --resource-group ${{ env.RESOURCE_GROUP }} --yes || echo "Cosmos DB not found or already deleted"
          
          # IoT Hub„ÇíÂâäÈô§
          echo "Deleting IoT Hub..."
          IOT_NAME="iot-${PROJECT_NAME//-/}${ENVIRONMENT}"
          az iot hub delete --name "$IOT_NAME" --resource-group ${{ env.RESOURCE_GROUP }} || echo "IoT Hub not found or already deleted"
          
          # Storage Account„ÇíÂâäÈô§
          echo "Deleting Storage Account..."
          STORAGE_NAME="st${PROJECT_NAME//-/}${ENVIRONMENT}"
          az storage account delete --name "$STORAGE_NAME" --resource-group ${{ env.RESOURCE_GROUP }} --yes || echo "Storage Account not found or already deleted"
          
          # Key Vault„ÇíÂâäÈô§
          echo "Deleting Key Vault..."
          KV_NAME="kv-${PROJECT_NAME//-/}${ENVIRONMENT}"
          az keyvault delete --name "$KV_NAME" --resource-group ${{ env.RESOURCE_GROUP }} || echo "Key Vault not found or already deleted"
          
          # Application Insights„ÇíÂâäÈô§
          echo "Deleting Application Insights..."
          az monitor app-insights component delete --app "ai-${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}" --resource-group ${{ env.RESOURCE_GROUP }} --yes || echo "Application Insights not found or already deleted"
          
          # Static Web App„ÇíÂâäÈô§
          echo "Deleting Static Web App..."
          az staticwebapp delete --name "swa-${{ env.PROJECT_NAME }}-${{ env.ENVIRONMENT }}" --resource-group ${{ env.RESOURCE_GROUP }} --yes || echo "Static Web App not found or already deleted"
          
          echo "‚úÖ Specific resource deletion completed"

      - name: Deletion summary
        run: |
          echo "=== Destruction Summary ==="
          echo "Resource Group: ${{ env.RESOURCE_GROUP }}"
          echo "Environment: ${{ github.event.inputs.environment }}"
          echo "Status: Specific resources successfully deleted"
          echo "Timestamp: $(date -u)"
          echo "GitHub Run ID: ${{ github.run_id }}"
          echo ""
          echo "üéâ Deployed resources have been removed from Azure"
          echo "‚úÖ Resource group remains intact"
          echo "üí° Remember to clean up any local references or documentation"
